#ifndef __LEDMATRIX_H
#define __LEDMATRIX_H

class LedMatrix {

  private:
  
    int row[8] = {4, 5, 6, 7, 15, 16, 17, 18}; // R1,R2,R3,R4,R5,R6,R7,R8
    int column[8] = {8, 3, 46, 9, 10, 11, 12, 13}; // C1,C2,C3,C4,C5,C6,C7,C8
    int numberMatrix[8][8];
    int num0[8][8] = {
      {0, 0, 1, 1, 1, 1, 0, 0}, //C1
      {0, 0, 1, 0, 0, 1, 0, 0}, //C2
      {0, 0, 1, 0, 0, 1, 0, 0}, //C3
      {0, 0, 1, 0, 0, 1, 0, 0}, //C4
      {0, 0, 1, 0, 0, 1, 0, 0}, //C5
      {0, 0, 1, 0, 0, 1, 0, 0}, //C6
      {0, 0, 1, 0, 0, 1, 0, 0}, //C7
      {0, 0, 1, 1, 1, 1, 0, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    }; 
    int num1[8][8] = {
      {0, 0, 0, 0, 1, 0, 0, 0}, //C1
      {0, 0, 0, 0, 1, 0, 0, 0}, //C2
      {0, 0, 0, 0, 1, 0, 0, 0}, //C3
      {0, 0, 0, 0, 1, 0, 0, 0}, //C4
      {0, 0, 0, 0, 1, 0, 0, 0}, //C5
      {0, 0, 1, 0, 1, 0, 0, 0}, //C6
      {0, 0, 0, 1, 1, 0, 0, 0}, //C7
      {0, 0, 0, 0, 1, 0, 0, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    }; 
    int num2[8][8] = {
      {0, 1, 1, 1, 1, 1, 1, 1}, //C1
      {0, 1, 0, 0, 0, 0, 0, 0}, //C2
      {0, 0, 1, 0, 0, 0, 0, 0}, //C3
      {0, 0, 0, 1, 0, 0, 0, 0}, //C4
      {0, 0, 0, 0, 1, 0, 0, 0}, //C5
      {0, 0, 0, 0, 0, 1, 0, 0}, //C6
      {0, 1, 0, 0, 0, 0, 1, 0}, //C7
      {0, 0, 1, 1, 1, 1, 1, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    };
    int num3[8][8] = {
      {0, 0, 1, 1, 1, 0, 0, 0}, //C1
      {0, 1, 0, 0, 1, 0, 0, 0}, //C2
      {0, 0, 0, 0, 1, 0, 0, 0}, //C3
      {0, 0, 0, 1, 1, 0, 0, 0}, //C4
      {0, 0, 0, 1, 1, 0, 0, 0}, //C5
      {0, 0, 0, 0, 1, 0, 0, 0}, //C6
      {0, 1, 0, 0, 1, 0, 0, 0}, //C7
      {0, 0, 1, 1, 1, 0, 0, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    };
    int num4[8][8] = {
      {0, 0, 0, 0, 1, 0, 0, 0}, //C1
      {0, 0, 0, 0, 1, 0, 0, 0}, //C2
      {0, 0, 0, 0, 1, 0, 0, 0}, //C3
      {1, 1, 1, 1, 1, 1, 0, 0}, //C4
      {0, 1, 0, 0, 1, 0, 0, 0}, //C5
      {0, 0, 1, 0, 1, 0, 0, 0}, //C6
      {0, 0, 0, 1, 1, 0, 0, 0}, //C7
      {0, 0, 0, 0, 1, 0, 0, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    };
    int num5[8][8] = {
      {0, 0, 0, 1, 1, 1, 0, 0}, //C1
      {0, 0, 1, 0, 0, 0, 0, 0}, //C2
      {0, 0, 1, 0, 0, 0, 0, 0}, //C3
      {0, 0, 1, 0, 0, 0, 0, 0}, //C4
      {0, 0, 0, 1, 1, 1, 0, 0}, //C5
      {0, 0, 0, 0, 0, 1, 0, 0}, //C6
      {0, 0, 0, 0, 0, 1, 0, 0}, //C7
      {0, 0, 1, 1, 1, 1, 0, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    };
    int num6[8][8] = {
      {0, 0, 0, 0, 1, 1, 0, 0}, //C1
      {0, 0, 0, 1, 0, 0, 1, 0}, //C2
      {0, 0, 1, 0, 0, 0, 1, 0}, //C3
      {0, 0, 1, 0, 0, 1, 0, 0}, //C4
      {0, 0, 1, 1, 1, 0, 0, 0}, //C5
      {0, 0, 1, 0, 0, 0, 0, 0}, //C6
      {0, 0, 0, 1, 0, 0, 0, 0}, //C7
      {0, 0, 0, 0, 1, 1, 0, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    };
    int num7[8][8] = {
      {0, 0, 0, 0, 0, 0, 0, 0}, //C1
      {0, 1, 0, 0, 0, 0, 0, 0}, //C2
      {0, 0, 1, 0, 0, 0, 0, 0}, //C3
      {0, 0, 0, 1, 0, 0, 0, 0}, //C4
      {0, 0, 0, 0, 1, 0, 0, 0}, //C5
      {0, 0, 0, 0, 0, 1, 0, 0}, //C6
      {0, 1, 1, 1, 1, 1, 1, 0}, //C7
      {0, 0, 0, 0, 0, 0, 0, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    };
    int num8[8][8] = {
      {0, 0, 1, 1, 1, 1, 0, 0}, //C1
      {0, 0, 1, 0, 0, 1, 0, 0}, //C2
      {0, 0, 1, 0, 0, 1, 0, 0}, //C3
      {0, 0, 1, 1, 1, 1, 0, 0}, //C4
      {0, 0, 1, 1, 1, 1, 0, 0}, //C5
      {0, 0, 1, 0, 0, 1, 0, 0}, //C6
      {0, 0, 1, 0, 0, 1, 0, 0}, //C7
      {0, 0, 1, 1, 1, 1, 0, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    };
    int num9[8][8] = {
      {0, 0, 0, 0, 0, 1, 0, 0}, //C1
      {0, 0, 0, 0, 0, 1, 0, 0}, //C2
      {0, 0, 0, 0, 0, 1, 0, 0}, //C3
      {0, 0, 0, 1, 1, 1, 0, 0}, //C4
      {0, 0, 1, 0, 0, 1, 0, 0}, //C5
      {0, 0, 1, 0, 0, 1, 0, 0}, //C6
      {0, 0, 1, 0, 0, 1, 0, 0}, //C7
      {0, 0, 0, 1, 1, 1, 0, 0}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    };
    int numX[8][8] = {
      {1, 0, 0, 0, 0, 0, 0, 1}, //C1
      {0, 1, 0, 0, 0, 0, 1, 0}, //C2
      {0, 0, 1, 0, 0, 1, 0, 0}, //C3
      {0, 0, 0, 1, 1, 0, 0, 0}, //C4
      {0, 0, 0, 1, 1, 0, 0, 0}, //C5
      {0, 0, 1, 0, 0, 1, 0, 0}, //C6
      {0, 1, 0, 0, 0, 0, 1, 0}, //C7
      {1, 0, 0, 0, 0, 0, 0, 1}  //C8
      //R1,R2,R3,R4,R5,R6,R7,R8
    };
  
  public:

    void initializeMatrix() { // Se inicializa los leds de la matriz
      for(int i = 0; i < 8; i++) {
        pinMode(row[i],OUTPUT);
        pinMode(column[i],OUTPUT);
      }
    }

    void resetMatrix() { // Todos los leds se apagan
      for(int i = 0; i < 8; i++) {
        digitalWrite(row[i], LOW); 
        digitalWrite(column[i], HIGH);
      }
    }

    void printNumber() { // Se escribe en la matrid de leds el numero deseado
      for(int i = 0; i < 8; i++){
        for(int j = 0; j < 8; j++) {
          if(numberMatrix[i][j] == 1) {
            digitalWrite(row[j], HIGH);
            digitalWrite(column[i], LOW);
            unsigned long startMillis = millis();
            while (millis() - startMillis < 1) { // Se espera un 1 ms para que pueda escribir bien el numero
            }
            resetMatrix();
          }
        }
      }
    }

    void setNumberMatrix(int number) { // Depende del numero se selecciona un array de doble dimension con el numero deseado
      if(number == -1) {
        copyVector(numX);
      } else {
        int (*almacen[])[8] = {num0,num1,num2,num3,num4,num5,num6,num7,num8,num9};
        copyVector(almacen[number]);
      }
    }

    void copyVector(int number [8][8]) { 
      for(int i = 0; i < 8; i++) {
        for(int j = 0; j < 8; j++) {
          numberMatrix[i][j] = number[i][j];
        }
      }
    }
};

#endif